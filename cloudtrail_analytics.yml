AWSTemplateFormatVersion: 2010-09-09

Parameters:
  S3Bucketname:
    Type: String
    Default: my-cloudtrail-logs
  Trailname:
    Type: String
    Default: MyCloudTrailTrail
  LogGroupTag:
    Type: String
    Default: MyCloudTrailTrailLogGroup
  LogGroupname:
    Type: String
    Default: /aws/cloudtrail/MyCloudTrailTrail
  Rolename:
    Type: String
    Default: MyCloudTrailTrailRole
  TrailPolicyname:
    Type: String
    Default: MyCloudTrailTrailPolicy
  AthenaBucketname:
    Type: String
    Default: trail-athena-bucket
  AthenaDBname:
    Type: String
    Default: trail_database
  AthenaTablename:
    Type: String
    Default: cloudtrail_logs

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3Bucketname

  CloudTrailTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      IsLogging: true
      S3BucketName: !Ref S3Bucket
      S3KeyPrefix: cloudtrail-logs/
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      CloudWatchLogsLogGroupArn: !GetAtt CloudTrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CloudTrailLogRole.Arn
      Tags:
        - Key: Name
          Value: !Ref Trailname
  CloudTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref LogGroupname
      RetentionInDays: 365
      Tags:
        - Key: Name
          Value: !Ref LogGroupTag
  CloudTrailLogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref Rolename
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Ref TrailPolicyname
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetBucketLocation
                Resource: !Sub "arn:aws:s3:::${S3Bucket}"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                  - logs:GetLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/cloudtrail/MyCloudTrailTrail:*"

  AthenaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AthenaBucketname
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Environment
          Value: Development
  AthenaDatabase:
    Type: AWS::Athena::NamedQuery
    Properties:
      Database: default
      Name: CreateTrailDatabase
      Description: Creates a database for trail data
      QueryString: >
        CREATE DATABASE IF NOT EXISTS trail_database
        COMMENT 'This is a database for trail data'
        LOCATION 's3://trail-athena-bucket/trail-data/'
  AthenaTable:
    Type: AWS::Athena::NamedQuery
    Properties:
      Database: !Ref AthenaDBname
      Name: !Ref AthenaTablename
      Description: CloudTrail logs
      QueryString: >
        CREATE EXTERNAL TABLE IF NOT EXISTS cloudtrail_logs (
          eventVersion STRING,
          userIdentity STRUCT<
            type:STRING,
            principalId:STRING,
            arn:STRING,
            accountId:STRING,
            userName:STRING,
            accessKeyId:STRING,
            sessionContext:STRUCT<
              attributes:STRUCT<
                mfaAuthenticated:STRING,
                creationDate:STRING>,
              sessionIssuer:STRUCT<
                type:STRING,
                principalId:STRING,
                arn:STRING,
                accountId:STRING,
                userName:STRING>>>,
          eventTime STRING,
          eventSource STRING,
          eventName STRING,
          awsRegion STRING,
          sourceIPAddress STRING,
          userAgent STRING,
          errorCode STRING,
          errorMessage STRING,
          requestParameters STRING,
          responseElements STRING,
          additionalEventData STRING,
          requestID STRING,
          eventID STRING,
          eventType STRING,
          apiVersion STRING,
          readOnly STRING,
          recipientAccountId STRING,
          serviceEventDetails STRING,
          sharedEventID STRING,
          vpcEndpointId STRING
        )
        ROW FORMAT SERDE 'com.amazon.emr.hive.serde.CloudTrailSerde'
        STORED AS INPUTFORMAT 'com.amazon.emr.cloudtrail.CloudTrailInputFormat'
        OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
        LOCATION 's3://my-cloudtrail-logs/cloudtrail-logs/'
        TBLPROPERTIES (
          'classification'='cloudtrail',
          'creator'='my-aws-account-id',
          'cloudtrail:LogFile'='CloudTrail/my_aws_account_id/MyCloudTrailTrail/my_aws_account_id_CloudTrail_MyCloudTrailTrail_20230102T1334Z_oSwKcEph1ZDBNSeC.json.gz',
          'cloudtrail:TableName'='cloudtrail_logs',
          'compressionType'='gzip'
        );
  AthenaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: athena.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AthenaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:GetBucketLocation
                  - s3:GetObjectVersion
                  - s3:GetObjectAcl
                Resource:
                  - !Sub arn:aws:s3:::${AthenaBucket}
              - Effect: Allow
                Action:
                  - athena:StartQueryExecution
                  - athena:GetQueryExecution
                  - athena:GetQueryResults
                  - athena:StopQueryExecution
                  - athena:GetNamedQuery
                  - athena:GetWorkGroup
                  - glue:GetTable
                  - glue:GetDatabase
                  - glue:GetPartitions
                  - glue:GetPartition
                  - glue:GetTables
                  - glue:GetTableVersion
                Resource: "*"
